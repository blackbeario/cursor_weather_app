---
description: 
globs: 
---
# Dependency Management Guidelines

## Required Dependencies
- flutter_bloc: For state management
- freezed_annotation: For immutable state/models
- get_it: For dependency injection
- auto_size_text: For adaptive text
- hive_flutter: For local caching
- json_annotation: For JSON serialization
- flutter_localizations: For internationalization

## Development Dependencies
- build_runner: For code generation
- freezed: For immutable code generation
- json_serializable: For JSON serialization
- mockito: For mocking in tests
- bloc_test: For testing BLoC/Cubit
- flutter_test: For widget testing

## Dependency Injection Setup
```dart
void setupFeatureInjection() {
  final getIt = GetIt.instance;
  
  // Register services
  getIt.registerSingleton<IFeatureService>(
    FeatureService(dependencies: getIt()),
  );
  
  // Register analytics
  getIt.registerSingleton<IFeatureAnalytics>(
    FeatureAnalytics(),
  );
}
```

## Best Practices
- Use singleton pattern for services
- Register dependencies before feature initialization
- Clean up resources when feature is disposed
- Use interface-based dependency injection 